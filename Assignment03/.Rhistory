library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit
submit()
evaluate(sd, c(1.4, 3.6, 7.9,8.8)
)
evaluate(function(x){x+1},6}
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8.4.0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[end]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
paste
?paste
pate("Programmin","is","fun!")
paste("Programming","is","fun!")
submit()
telegram("hallo koos")
submit()
mad_libs(parys, oop, maak)
mad_libs("Parys","oop","maak")
submit()
'I' %p% 'love' %p% 'R!'
swirl()
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
swirl
swirl()
x
x[1:10]
x[isna(x)]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c(3,5,7)
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-20)]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect, vect2)
vect[2]
vect[bar]
vect["bar"]
vect("foo", "bar")
vect["foo", "bar"]
vect[c("foo", "bar")]
library(swirl)
swirl()
x
0
skip()
getwd()
mean(x)
traceback()
mean(x)
traceback()
editor
editor()
lm(y-x)
traceback()
debug(lm)
lm(y-x)
?rnorm
rnorm(5)
"runif"
?runif
x <- c(rnorm(5), runif(5), rnorm(10,1))
x
?gl
split(x)
gl(3,5)
f <- gl(3,5)
split(x,f)
x <- c(rnorm(5), runif(5), rnorm(5,1))
split(x,f)
mean(split(x,f))
lapply(split(x,f), mean)
lapply(split(x,f), max)
lapply(split(x,f), max, mean)
library(datasets)
ls()
head(airquality)
airquality
head(airquality)
s <- split(airquality, airquality$Month)
s
lapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R", "wind")]))
lapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")]))
colMeans(airquality, 1)
colMeans(airquality, 1:10)
colMeans(airquality, "Ozone")
colMeans(airquality, c("Ozone")
colMeans(airquality, na.rm=TRUE, c("Ozone")
?colMeans
lapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")], na.rm=1))
makeFuncList <- function(x) {
s <<- x
q <<- x^2
h <<- x/2
i <<- 1/x
list(self = s, quad = q, half = h, inv = i)
}
makeFuncList(2)
makeFuncList <- function(x) {
s <<- function() x
q <<- function() x^2
h <<- function() x/2
i <<- function() 1/x
list(self = s, quad = q, half = h, inv = i)
}
makeFuncList(2)
makeFuncList <- function(x) {
s <<- function() x
q <<- function(z) z <<- x^2
h <<- function() x/2
i <<- function() 1/x
list(self = s, quad = q, half = h, inv = i)
}
makeFuncList(2)
makeFuncList <- function(x) {
s <<- function() x
q <<- function(x) z <<- x^2
h <<- function() x/2
i <<- function() 1/x
list(self = s, quad = q, half = h, inv = i)
}
makeFuncList(2)
makeFuncList <- function(x) {
s <<- function() x
q <<- function() {x^2}
h <<- function() x/2
i <<- function() 1/x
list(self = s, quad = q, half = h, inv = i)
}
makeFuncList(2)
makeFuncList <- function(x) {
s <- x
q <- x^2
h <- x/2
i <- 1/x
list(self = s, quad = q, half = h, inv = i)
}
makeFuncList(2)
getwd()
download.file("http://s3.amazonaws.com/practice_assignment/diet_data.zip")
download.file("http://s3.amazonaws.com/practice_assignment/diet_data.zip", diet_data.zip)
download.file("http://s3.amazonaws.com/practice_assignment/diet_data.zip", "diet_data.zip"")
""
download.file("http://s3.amazonaws.com/practice_assignment/diet_data.zip", "diet_data.zip")
list.files()
unzip("diet_data.zip", exdir="diet_data")
list.files()
list.files("diet_data/")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
summary(andy)
str(andy)
dim(andy)
names(andy)
andy[which(andy$Day == 30)]
andy[which(andy$Day == 30),]
andy[which((andy$Day <= 30)&&(andy$Day >= 20)),]
andy[which(andy$Day <= 30),]
andy[which(andy$Day >= 20),]
andy[which(andy$Day >= 10),]
andy[which(andy$Day >= 10)&&which(andy$Day <= 20),]
andy[which(andy$Day >= 10) && which(andy$Day <= 20),]
andy[which((andy$Day >= 10) && (andy$Day <= 20)),]
andy[a(ndy$Day >= 10) && (andy$Day <= 20),]
andy[(andy$Day >= 10) && (andy$Day <= 20),]
andy[(andy$Day <= 20),]
andy[(10 <= andy$Day <= 20),]
andy[(andy$Day <= 20),]
andy[(andy$Day <= 20) || (andy$Day >= 20),]
andy[(andy$Day <= 20) & (andy$Day >= 20),]
andy[(andy$Day <= 20) & (andy$Day >= 10),]
andy[(andy$Day <= 20) && (andy$Day >= 10),]
andy[(andy$Day <= 20) & (andy$Day >= 10),]
?&
?\&
list.files("diet_data/")
fileList <- list.files("diet_data/")
fileList
fileList <- list.files("diet_data/", full.names=1)
fileList
for (i in fileList) { print i}
for (i in fileList) { print i;}
for (i in fileList) { print(i);}
for (i in fileList) { dat <- rbind(dat, read.csv(i)) ;  print(i);}
dat <- data.frame()
for (i in fileList) { dat <- rbind(dat, read.csv(i)) ;  print(i);}
dat
dim(dat)
median(dat$Weight)
median(dat$Weight, na.rm = 1)
setwd("~/Coursera/Programming-with-R/BenicoRscripts/Assignment03")
?subset
source("best.R")
best("SC", "heart attack")
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
best("NY", "heart attack")
best("WI", "pneumonia")
best("TX", "pneumonia")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
rankall("heart attack", 4)
source("rankall.R")
rankall("heart attack", 4)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$name)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$name)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$name)
rankall("pneumonia", "worst")
rankhospital("NC", "heart attack", "worst")
rankhospital("NC", "pneumonia", "worst")
rankhospital("NJ", "pneumonia", "worst")
source("rankall.R")
rankhospital("NJ", "pneumonia", "worst")
rankall("pneumonia", "worst")
rankhospital("WI", "pneumonia", "worst")
r
na.omit(r)
source("rankhospital.R")
rankhospital("WI", "pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
rankhospital("WI", "pneumonia", "worst")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
nrow(r)
r[54]
r[54,]
r
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
rankall("pneumonia", "best")
r
sort(r)
sort(r, order(r[2]))
?sort
rank(r)
sort(r, partial = c(2))
sort(r, partial = c(1,2))
sort(r, c(1,2))
sort(r,
sort(r, )
)
sort(r )
sort(r[2,] )
sort(r[,] )
sort(r[,2] )
slurce("rankall.R")
source("rankall.R")
rankall("pneumonia", "best")
source("rankall.R")
rankall("pneumonia", "best")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
?cbind
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "best")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "best")
source("rankall.R")
rankall("pneumonia", "best")
source("rankall.R")
rankall("pneumonia", "best")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "best")
source("rankall.R")
rankall("pneumonia", "best")
source("rankall.R")
rankall("pneumonia", "best")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
source('~/Coursera/Programming-with-R/BenicoRscripts/Assignment03/rankhospital.R')
rankhospital("NY", "heart attack", 7)
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$name)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$name)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$name)
